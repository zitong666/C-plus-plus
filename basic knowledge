/*
//Drawing a shape
#include <iostream>

using namespace std;

int main()
{
    std::cout << "     /|" << std::endl;
    std::cout << "    / |" << std::endl;
    std::cout << "   /  |" << std::endl;
    std::cout << "  /   |" << std::endl;
    std::cout << " /    |" << std::endl;
    std::cout << "/_____|" << std::endl;
    return 0;
}

// Variables
#include <iostream>

using namespace std;
int main()
{
    string characterName = "John";
    int characterAge;
    characterAge = 35;
    cout << "There once was a man named " << characterName << endl;
    cout << "He was "<< characterAge << " years old" <<endl;

    characterName = "Mike";
    cout << "He likes the name " << characterName <<endl;
    cout << "But did not like being " << characterAge << endl;

    return 0ï¼›
}

//data types
#include <iostream>
using namespace std;
int main()
{
    char grade = 'A';
    string phrase = "Zitong Xu";
    int age = 50;
    double gpa = 2.0;
    bool isMale = true;
    cout << grade << endl;
    return 0;
}

//working with string
#include <iostream>
using namespace std;
int main()
{
    string phrase = "Zitong Xu";
    string phrasesub;
    phrasesub = phrase.substr(4,5);
    phrase[0] = 'X';
    cout << phrase.length() << endl;
    cout << phrase << endl;
    cout << phrase.find("Xu",0) << endl;
    cout << phrasesub;

    return 0;
}

//working with number
#include <iostream>
#include <cmath>
using namespace std;
int main()
{
    cout << 40 <<endl;
    cout << 5 + 7 << endl;
    cout << 10 % 3 << endl;
    cout << 12 /10;
    int wnum = 5;
    double dnum = 5.5;

    wnum++;
    cout << wnum <<endl;
    cout << 5.5 + 9 << endl;
    cout << 10 / 3 << endl;
    cout << 10 / 3.0 <<endl;

    cout << pow(2,5) <<endl;
    cout << sqrt(36) << endl;
    cout << round(2.4) << endl;
    cout << round(4.6) << endl;
    cout << ceil(3.1) << endl;
    cout << floor(4.8) << endl;
    cout << fmax(6,8) << endl;
    cout << fmin(6,8) << endl;
    return 0;
}

//getting user input
#include <iostream>

using namespace std;

int main()
{
    //int age;
    string name;
    //cout << "Enter your age: " << endl;
    cout << "Enter your name: " << endl;
    //cin >> age;
    getline(cin,name);

    //cout << "You are " << age << " years old";
    cout << "Hello " << name << endl;
    return 0;
}

//building a calculator
#include <iostream>

using namespace std;

int main()
{
    double num1, num2;
    cout << "Enter the first number: ";
    cin >> num1;

    cout << "Enter the second number: ";
    cin >> num2;

    cout << num1 + num2;

    return 0;

}

//building a mad libs game
#include <iostream>

using namespace std;

int main()
{
    string color, pluralNoun, celebrity;
    cout << "Enter a color: ";
    getline(cin,color);
    cout << "Enter a pluralNoun: ";
    getline(cin,pluralNoun);
    cout << "Enter a celebrity: ";
    getline(cin,celebrity);

    cout << "Roses are " << color << endl;
    cout << pluralNoun << " are blue" << endl;
    cout << "I love " << celebrity << endl;
    return 0;
}

//arrays
#include <iostream>
using namespace std;

int main()
{
    int luckyNums[20] = {4, 8, 15, 16, 23, 42};
    luckyNums[10] = 100;
    cout << luckyNums[0];
    cout << luckyNums[10];
    return 0;
}

//Functions
#include <iostream>

using namespace std;

void sayHi(string name, int age);

int main()
{
    cout << "Top" << endl;
    sayHi("Zitong",28);
    sayHi("Sam",11);
    sayHi("Jone",16);
    cout << "Bottom";
    return 0;
}

void sayHi(string name, int age)
{
    cout << "Hello " << name << " you are " << age <<endl;
}

// Return Statement
#include <iostream>
#include <cmath>
using namespace std;

double cube(double num);

int main()
{
    double answer = cube(5.0);
    cout << answer;
    cout << cube(5.0);
    return 0;
}

double cube(double num)
{
    //double result = pow(num,3);
    //return result;
    return pow(num,3);
}

//If statements
#include <iostream>

using namespace std;

int main()
{
    bool isMale = true;
    bool isTall = false;
    if(isMale && isTall)  // one of them //
    {
        cout << "you are a tall male";
    }
    else if(isMale && !isTall)
    {
        cout << "you are a short male";
    }
    else if(!isMale && isTall)
    {
        cout << "you are tall but not male";
    }
    else
    {
        cout << "you are not male and not tall";
    }

    return 0;
}

//more if statement
#include <iostream>
using namespace std;

int getMax(int num1, int num2, int num3)
{
    int result;

    if(num1 >= num2 && num1 >= num3)
    {
        result = num1;
    }
    else if(num2 >=num1 && num2 >=num3)
    {
        result = num2;
    }
    else
    {
        result = num3;
    }
    return result;

}

int main()
{
    cout << getMax(200,200,10);
    return 0;
}

//building a better calculator
#include <iostream>
using namespace std;

int main()
{
    int num1, num2;
    char op;

    cout << "Enter first number: ";
    cin >> num1;
    cout << "Enter operator: ";
    cin >> op;
    cout << "Enter second number: ";
    cin >> num2;
    int result;
    if(op == '+')
    {
        result = num1 + num2;
    }
    else if(op == '-')
    {
        result = num1 - num2;
    }
    else if(op == '*')
    {
        result = num1 * num2;
    }
    else if(op == '/')
    {
        result = num1 / num2;
    }
    else
    {
        cout << "Invalid Operator";
    }

    cout << result;
    return 0;
}

//switch statement
#include <iostream>
using namespace std;

string getDayOfWeek(int dayNum)
{
    string dayName;
    //if(dayNum == 0)
    //{
    //    dayName = "Sunday";
    //}
    switch(dayNum)
    {
        case 0:
            dayName = "Sunday";
            break;
        case 1:
            dayName = "Monday";
            break;
        case 2:
            dayName = "Tuesday";
            break;
        case 3:
            dayName = "Wednesday";
            break;
        case 4:
            dayName = "Thursday";
            break;
        case 5:
            dayName = "Friday";
            break;
        case 6:
            dayName = "Saturday";
            break;
        default:
            dayName = "Invalid day number";
    }
    return dayName;
}
int main()
{
    cout << getDayOfWeek(10);
    return 0;
}

//While loops
#include <iostream>

using namespace std;

int main()
{
    int index = 6;
    while(index <=5)
    {
        cout << index << endl;
        index++;
    }
    return 0;
}

//do while loop
#include <iostream>
using namespace std;

int main()
{
    int index = 8;

    do {
        cout << index << endl;
        index++;
    }while(index <= 5);

    return 0;
}

//building a guessing game
#include <iostream>

using namespace std;

int main()
{
    int secretNum = 7;
    int guess;
    int guessCount = 0;
    int guessLimit = 3;
    bool outOfGuess = false;

    while(secretNum != guess && !outOfGuess)
    {
        if(guessCount < guessLimit)
        {
            cout << "Enter guess: ";
            cin >> guess;
            guessCount++;
        }
        else
        {
            outOfGuess = true;
        }

    }
    if(outOfGuess == true)
    {
        cout << "You Lose!";
    }
    else
    {
        cout << "You Win!";
    }
    return 0;
}

//For loops
#include <iostream>
using namespace std;

int main()
{
    int nums[] = {1,2,5,7,3};

    for(int i = 0; i<5;i++)
    {
        cout << nums[i] <<endl;
    }

    return 0;
}

//Exponent Function
#include <iostream>
using namespace std;

int power(int baseNum, int powNum)
{
    int result = 1;
    for(int i = 0; i < powNum; i++)
    {
        result = result * baseNum;
    }

    return result;
}
int main()
{
    int baseNum, powNum;
    cout << "Enter the base num: ";
    cin >> baseNum;
    cout << "Enter the power num: ";
    cin >> powNum;

    cout << baseNum << " power " << powNum << " = " << power(baseNum,powNum);
    return 0;
}

// 2D Arrays & Nested Loops
#include <iostream>
using namespace std;

int main()
{
    int numberGrid[3][2] ={{1,2},{3,4},{5,6}};

    for(int i = 0; i < 3; i++)
    {
        for(int j = 0; j <2; j++)
        {
            cout << numberGrid[i][j];
        }
        cout << endl;
    }



    return 0;
}

//comments
#include <iostream>
using namespace std;

int main()
{
    //Comment
    cout << "Comments are fun";
    return 0;
}

//pointers
#include <iostream>
using namespace std;

int main()
{
    int age = 19;
    int *pAge = &age;
    double gpa = 2.7;
    double *pGpa = &gpa;
    string name = "Zitong";
    string *pName = &name;

    cout << "Age: " <<&age <<endl;
    cout << "Gpa: " << &gpa << endl;
    cout << "Name: " << &name << endl;
    cout << pAge << endl;
    cout << *pAge << endl;
    cout << &gpa << endl;
    cout << *&gpa << endl;
    cout << &*&gpa << endl;


    return 0;
}

//Class & Objects
#include <iostream>

using namespace std;

class Book
{
    public:
        string title;
        string auther;
        int pages;
};

int main()
{
    Book book1;
    book1.title = "Harry Potter";
    book1.auther = "JK Rowling";
    book1.pages = 500;

    Book book2;
    book2.title = "Lord of the Rings";
    book2.auther = "Tolkein";
    book2.pages = 700;


    cout << book1.title << endl;
    cout << book2.auther;
    return 0;
}

// Constructor Functions
#include <iostream>
using namespace std;

class Book
{
    public:
        string title;
        string author;
        int pages;
        Book()
        {
            title = "no title";
            author = "no auther";
            pages = 0;
        }

        Book(string aTitle, string aAuthor, int aPages)
        {
            title = aTitle;
            author = aAuthor;
            pages = aPages;

        }
};

int main()
{
    Book book1("Harry Potter","JK Rowling",500);
    book1.title = "Zitong";
    Book book2("Lord of the Rings","Tolkein",700);

    Book book3;
    cout << book3.title;
    return 0;
}

// Object Functions
#include <iostream>
using namespace std;

class Student
{
    public:
        string name;
        string major;
        double gpa;
        Student(string aName, string aMajor, double aGpa)
        {
            name = aName;
            major = aMajor;
            gpa = aGpa;
        }

        bool hasHonors()
        {
            if(gpa >= 2.0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
};

int main()
{
    Student student1("Jim","Business",2.4);
    Student student2("Pam","Art",3.6);
    cout << student1.hasHonors() << endl;
    cout << student2.hasHonors();
    return 0;
}

// Getters & Setters
#include <iostream>
using namespace std;

class Movie
{
    private:
        string rating;

    public:
        string title;
        string director;

        Movie(string aTitle, string aDirector, string aRating)
        {
            title = aTitle;
            director = aDirector;
            setRating(aRating);
        }
        void setRating(string aRating)
        {
            if(aRating == "G" || aRating == "PG" || aRating == "PG-13" || aRating == "R" || aRating == "NR")
            {
               rating = aRating;
            }
            else
            {
                rating = "NR";
            }
        }
        string getRating()
        {
            return rating;
        }
};


int main()
{
    Movie avengers("The Avengers","Joss Whedon","PG-15");
    //avengers.setRating("Dog");
    cout << avengers.getRating();

    return 0;
}
*/
// Inheritance
#include <iostream>
using namespace std;
//super class
class Chef
{
    public:
        void makeChicken()
        {
            cout << "The chef makes chicken" << endl;
        }
        void makeSalad()
        {
            cout << "The chef makes salad" << endl;
        }
        void makeSpecialDish()
        {
            cout << "The chef makes bbq ribs" << endl;
        }
};
// sub-class
class ItalianChef: public Chef
{
    public:
        void makePasta()
        {
            cout << "The chef makes pasta" << endl;
        }
        void makeSpecialDish()
        {
            cout << "The chef makes chicken parm" << endl;
        }

};

int main()
{
    Chef chef;
    chef.makeSpecialDish();

    ItalianChef intalianchef;
    intalianchef.makeSpecialDish();
    return 0;
}
